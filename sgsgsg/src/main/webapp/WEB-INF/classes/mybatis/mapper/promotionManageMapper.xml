<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgsg.dra.admin.mapper.PromotionManageMapper">
	<insert id="insertEvent" parameterType="com.sgsg.dra.admin.domain.PromotionManage">
		INSERT INTO event(event_num, userId, title, content, created_date,
			startDate, endDate, winningDate, 
			winnerNumber, showEvent)
		VALUES (event_seq.NEXTVAL, #{userId}, #{title}, #{content},
			sysdate,
			TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS'), 
			TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS'),
			TO_DATE(#{winningDate, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
			#{winnerNumber}, #{showEvent})
	</insert>
	
	<sql id="where-list">
		<choose>
			<when test="schType == 'all' ">
			   ( INSTR(title, #{kwd}) &gt; 0
		          OR DBMS_LOB.INSTR(content, #{kwd}) &gt; 0 )
			</when>
			<otherwise>
			   ( TO_CHAR(${schType}, 'YYYYMMDD') = #{kwd}
		          OR TO_CHAR(${schType}, 'YYYY-MM-DD') = #{kwd} )
			</otherwise>
		</choose>
	</sql>
	
	<sql id="period-list">
		<choose>
			<when test="category == 'progress' ">
				( startDate &lt;= SYSDATE  AND endDate &gt; SYSDATE )
			</when>
			<when test="category == 'upcoming' ">
				( startDate &gt;= SYSDATE )
			</when>
			<when test="category == 'winner' ">
				( winnerNumber != 0 AND winningDate &lt;= SYSDATE AND ADD_MONTHS(winningDate, 6) &gt;= SYSDATE ) 
			</when>
			<when test="category == 'ended' ">
				( endDate &lt; SYSDATE )
			</when>
		</choose>
	</sql>
	
	
	<!-- 글 개수 -->
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM event
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd!=null and kwd!='' ">
				AND <include refid="where-list"/>
			</if>
		</where>   
	</select>
	
	
	<!-- 글 리스트 -->
	<select id="listEvent" parameterType="map" resultType="com.sgsg.dra.admin.domain.PromotionManage">
		SELECT e.event_num, e.title, e.showEvent, e.created_date,
		   TO_CHAR(startDate,'YYYY-MM-DD HH24:MI') startDate,
		   TO_CHAR(endDate, 'YYYY-MM-DD HH24:MI') endDate, 
		   TO_CHAR(winningDate, 'YYYY-MM-DD HH24:MI') winningDate, winnerNumber
		   <if test="category != 'winner'">
		   		, NVL(applyCount, 0) applyCount
		   </if>
		   <if test="category == 'winner'">
		   		, NVL(winnerCount, 0) winnerCount
		   </if>
		FROM event e
		<if test="category != 'winner'">
			LEFT OUTER JOIN (
				SELECT event_num, COUNT(*) applyCount
				FROM eventTakers
				GROUP BY event_num
			) t ON e.event_num = t.event_num
		</if>
		<if test="category == 'winner'">
			LEFT OUTER JOIN (
				SELECT event_num, COUNT(*) winnerCount
				FROM eventWinner
				GROUP BY event_num
			) w ON e.event_num = w.event_num
		</if>
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd != null and kwd != ''">
				AND <include refid="where-list"/>
			</if>
		</where>
		ORDER BY event_num DESC
		OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
	</select>
	
	<!-- 글보기 -->
	<select id="findById" parameterType="Long" resultType="com.sgsg.dra.admin.domain.PromotionManage">
		SELECT e.event_num, e.userId, userName, title, content,
			TO_CHAR(startDate,'YYYY-MM-DD HH24:MI') startDate,
			TO_CHAR(endDate, 'YYYY-MM-DD HH24:MI') endDate, 
			TO_CHAR(winningDate, 'YYYY-MM-DD HH24:MI') winningDate, 
			e.winnerNumber, e.showEvent
		FROM event e
		JOIN member1 m ON e.userId = m.userId
		WHERE e.event_num = #{event_num}
	</select>
	
	
	<!-- 이전글 -->
	<select id="findByPrev" parameterType="map" resultType="com.sgsg.dra.admin.domain.PromotionManage">
		SELECT event_num, title 
		FROM event
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd != null and kwd != '' ">
				AND <include refid="where-list"/>
			</if>
			AND (event_num &gt; #{event_num})
		</where>
		ORDER BY event_num ASC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	
	<!-- 다음글 -->
	<select id="findByNext" parameterType="map" resultType="com.sgsg.dra.admin.domain.PromotionManage">
		SELECT event_num, title
		FROM event
		<where>
			<if test="showEvent != null and showEvent == 1">
				showEvent = 1
			</if>
			<if test="category != 'all' ">
				AND <include refid="period-list"/>
			</if>
			<if test="kwd != null and kwd != '' ">
				AND <include refid="where-list"/>
			</if>
			AND (event_num &lt; #{event_num})
		</where>
		ORDER BY event_num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>
	
	
	<!-- 수정 -->
	<update id="updateEvent" parameterType="com.sgsg.dra.admin.domain.PromotionManage">
		UPDATE event SET title=#{title}, content=#{content},
				startDate=TO_DATE(#{startDate}, 'YYYY-MM-DD HH24:MI:SS'),
				endDate=TO_DATE(#{endDate}, 'YYYY-MM-DD HH24:MI:SS'),
				winningDate=TO_DATE(#{winningDate, jdbcType=VARCHAR}, 'YYYY-MM-DD HH24:MI:SS'),
				winnerNumber=#{winnerNumber},
				showEvent=#{showEvent}
		WHERE event_num = #{event_num}
	</update>
	
	
	<!-- 삭제 -->
	<delete id="deleteEvent" parameterType="Long">
		DELETE FROM event WHERE event_num = #{event_num}
	</delete>
	
	
	<!-- 이벤트 응모자 리스트 -->
	<select id="listEventTakers" parameterType="Long" resultType="com.sgsg.dra.admin.domain.PromotionManage">
		SELECT event_num, e.userId, userName, e.reg_date
		FROM eventTakers e
		JOIN member1 m ON e.userId = m.userId
		WHERE event_num = #{event_num}
		ORDER BY reg_date ASC
	</select>
	
	
	<!-- 이벤트 당첨자 등록 1 -->
	<update id="insertEventWinner1" parameterType="com.sgsg.dra.admin.domain.PromotionManage">
		INSERT INTO eventWinner(event_num, userId, rank, reg_date) 
			SELECT event_num, userId, 0, SYSDATE FROM (
				SELECT * FROM eventTakers
				WHERE event_num = #{event_num}
				ORDER BY DBMS_RANDOM.VALUE
			) tb WHERE ROWNUM &lt;= #{winnerNumber}
	</update>
	
	
	<!-- 이벤트 당첨자 등록 2 -->
	<insert id="insertEventWinner2" parameterType="com.sgsg.dra.admin.domain.PromotionManage">
		INSERT INTO eventWinner(event_num, userId, rank, reg_date) 
			VALUES (#{event_num}, #{userId}, #{rank}, SYSDATE)
	</insert>
	
	
	<!-- 이벤트 당첨자 리스트 -->
	<select id="listEventWinner" parameterType="Long" resultType="com.sgsg.dra.admin.domain.PromotionManage">
		SELECT event_num, e.userId, rank, e.reg_date 
		FROM eventWinner e
		JOIN member1 m ON e.userId = m.userId
		WHERE event_num = #{event_num}
		ORDER BY rank ASC
	</select>
	
	
	<!-- 포인트 기록 삽입 -->
    <insert id="insertPointHistory" parameterType="com.sgsg.dra.domain.MyPoint">
        INSERT INTO point_history (num, change_points, reason, change_date, remain_points, userId)
        VALUES (point_history_seq.NEXTVAL, #{change_points}, #{reason}, SYSDATE, #{remain_points}, #{userId})
    </insert>
    
    <!-- 마지막 포인트 조회 -->
	<select id="findByUserPoint" parameterType="String" resultType="com.sgsg.dra.domain.UserPoint">
		SELECT NUM, NVL(CHANGE_POINTS, 0) CHANGE_POINTS, REASON, CHANGE_DATE, NVL(REMAIN_POINTS, 0) REMAIN_POINTS, USERID
		FROM POINT_HISTORY
		WHERE USERID = #{userId}
		ORDER BY num DESC
		FETCH FIRST 1 ROWS ONLY
	</select>


</mapper>