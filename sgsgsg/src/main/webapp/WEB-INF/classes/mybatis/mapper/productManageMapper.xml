<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sgsg.dra.admin.mapper.ProductManageMapper">

<!-- 상품등록 시퀀스 보존용 -->
<select id="productSeq" resultType="Long">
	Select product_seq.NextVal From dual
</select>

<!-- 상품 등록하기 -->
<insert id="insertProduct" parameterType="com.sgsg.dra.admin.domain.ProductManage">
    Insert Into product
    (productNum, CategoryNum, productName, classify, price, 
        discountRate, savedMoney, delivery, optionCount, content, thumbnail, productShow, reg_date, search_Word)
    Values
    (#{productNum}, #{categoryNum}, #{productName}, #{classify}, #{price},
        #{discountRate}, #{savedMoney}, #{delivery}, #{optionCount}, #{content}, #{thumbnail}, #{productShow}, SYSDATE, #{searchWords})
</insert>

<!-- 추가적인 이미지 등록 -->
<insert id="insertProductFile" parameterType="com.sgsg.dra.admin.domain.ProductManage">
		INSERT INTO product_Image(fileNum, img_name, productNum)
		VALUES(PRODUCT_IMAGE_SEQ.NEXTVAL, #{filename}, #{productNum} )
</insert>

<!-- 상품 카테고리 -->
<select id="findByCategory" parameterType="Long" resultType="com.sgsg.dra.admin.domain.ProductManage">
	SELECT categoryNum, categoryName, use, displayNo, parentNum, categoryImage
	FROM PRODUCT_CATEGORY
	WHERE categoryNum = #{categoryNum}
</select>

<!-- 상품 상위 카테고리 목록 -->
<select id="listCategory" resultType="com.sgsg.dra.admin.domain.ProductManage">
	SELECT categoryNum, categoryName, displayno, parent_categorynum, categoryimage, use
	FROM product_Category
	WHERE use = 1 AND parent_categorynum IS NULL
	ORDER BY displayno
</select>

<!-- 상품 하위 카테고리 목록 -->
<select id="listSubCategory" parameterType="Long" resultType="com.sgsg.dra.admin.domain.ProductManage">
	SELECT categoryNum, categoryName, displayno, parent_categorynum, categoryimage, use
	FROM PRODUCT_CATEGORY
	WHERE use = 1 AND parent_categorynum = #{parent_categorynum}
	ORDER BY displayNo
</select>

<!-- 옵션 1, 2 등록용 시퀀스 밸류 보존 -->
<select id="optionSeq" resultType="Long">
	Select PRODUCT_OPTION_SEQ.NEXTVAL From dual
</select>

<!-- 옵션 1 등록 -->
<insert id="insertProductOption" parameterType="com.sgsg.dra.admin.domain.ProductManage">
	INSERT INTO PRODUCT_OPTION (OPTIONNUM, OPTIONNAME, PRODUCTNUM, PARENTNUM)
	VALUES (#{optionNum}, #{optionName}, #{productNum}, #{parentOption, jdbcType=INTEGER})
</insert>

<!-- 옵션 2 등록시 보존용 시퀀스 -->
<select id="detailSeq" resultType="Long">
	Select OPTIONDETAIL_SEQ.NEXTVAL From dual
</select>

<!-- 옵션 2 등록 -->
<insert id="insertOptionDetail" parameterType="com.sgsg.dra.admin.domain.ProductManage">
	INSERT INTO OPTIONDETAIL (DETAILNUM, OPTIONVALUE, OPTIONNUM)
	VALUES (#{detailNum}, #{optionValue}, #{optionNum})
</insert>

<!-- 상품 리스트 끌고오기(우선은 그냥 다 갖고오게끔)-->
<!-- 검색어 같은 것 구현할 예정 -->
<select id="listProduct" parameterType="map"
	resultType="com.sgsg.dra.admin.domain.ProductManage">
	Select productNum, p.categoryNum, pc.categoryName, productName, classify, price, discountRate, savedMoney, 
    	delivery, optionCount, content, thumbnail, productShow, To_Char(reg_date, 'YYYY-MM-DD') reg_date, To_Char(update_date, 'YYYY-MM-DD') update_date, search_word
	From product p
	Join PRODUCT_CATEGORY pc On p.categoryNum = pc.categoryNum
	Order By p.productNum DESC
	OFFSET #{offset} ROWS FETCH FIRST #{size} ROWS ONLY
</select>

<!-- 전체 상품의 개수(TODO: 일반/특가 에 따라 갖고오는거 다르게 구현할 예정)-->
<select id="dataCount" parameterType="map" resultType="Integer">
	Select NVL(COUNT(*), 0)
	From product p
</select>



</mapper>